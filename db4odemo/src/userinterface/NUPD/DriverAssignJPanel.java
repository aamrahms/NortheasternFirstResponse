/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NUPD;

import Business.Complaint.Complaint;
import Business.EcoSystem;
import Business.Logic.Redeye.Driver;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fianrodrigues
 */
public class DriverAssignJPanel extends javax.swing.JPanel 
{

    /**
     * Creates new form DriverAssignJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    EcoSystem system;
    Complaint complaint, newComplaint;
    ArrayList<Driver> driverList;
    DefaultTableModel md;
    
    public DriverAssignJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system, Complaint complaint) 
    {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.system = system;
        this.complaint=complaint;
        driverList = system.getDriverDirectory().getDriverList();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDriver = new javax.swing.JTable();
        lblHeading = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(null);

        btnBack.setText("< Go Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(0, 0, 108, 29);

        tblDriver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Drivers", "Working on"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDriver);

        add(jScrollPane1);
        jScrollPane1.setBounds(129, 121, 696, 82);

        lblHeading.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("DRIVERS AVAILABLE");
        add(lblHeading);
        lblHeading.setBounds(0, 55, 902, 22);

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign);
        btnAssign.setBounds(730, 230, 87, 29);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(740, 80, 91, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardlayout = (CardLayout) userProcessContainer.getLayout();
        cardlayout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
       
        int selectedRow =tblDriver.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please pick a complaint to assign to Red Eye Driver!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            
            Driver driver= driverList.get(selectedRow);
            if(driver.getComplaint()==null)
            {
                complaint.setStatus("AssignedToDriver");
                complaint.setDriver(true);  
                newComplaint= new Complaint(complaint);
                newComplaint.setStatus("NewRide");
                driver.getRidesList().add(newComplaint);
                JOptionPane.showMessageDialog(this, "Complaint assigned to Driver "+driver.getEmployee().getName());
            }
            else 
            {
                JOptionPane.showMessageDialog(this, "Driver already assigned to pickup victim");
            }
            
        }
        populateTable();

    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

     public void populateTable()
    {
        
        md=(DefaultTableModel)tblDriver.getModel();
        md.setRowCount(0);
        Object row[]= new Object[2];
        
        for(Driver d : driverList)
        {          
                row[0]=d.getEmployee().getName();
                try{
                    row[1]=" Complaint ID :" + d.getComplaint().getComplaintID();
                }
                catch(NullPointerException e){
                    row[1]=" Available ";
                }
                md.addRow(row);         
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JTable tblDriver;
    // End of variables declaration//GEN-END:variables
}
